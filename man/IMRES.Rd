% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IMRES.R
\name{IMRES}
\alias{IMRES}
\title{An iterative minimal residual algorithm [IMRES]
(Итерационный метод минимальных невязок)}
\usage{
IMRES(A, f, u, eps = 0.001, iterations = 10000)
}
\arguments{
\item{A}{- the original matrix of the operator 
equation - numeric or complex matrix (исходная 
матрица операторного уравнения - вещественная 
или комплексная)}

\item{f}{- bias - numeric or complex vector 
(вектор свободных членов вещественный или 
комплексный)}

\item{u}{- initial approximation of an unknown 
vector - numeric or complex vector (начальное 
приближение неизвестного вектора - вещественный 
или комплексный вектор)}

\item{eps}{- accuracy of calculation of the desired 
vector - numeric (точность вычисления искомого 
вектора - вещественная)}

\item{iterations}{- the upper limit on the number of 
iterations when the method diverges (ограничение 
сверху на число итераций при расхождении метода)}
}
\value{
u - unknown vector in some approximation 
(неизвестный вектор в некотором приближении)
}
\description{
Non-stationary iterative method for 
solving systems of linear algebraic equations. 
The essence of the method is to search at each 
iteration of the iterative parameter by the 
projection method. This method is a special 
case of the generalized minimal residual algorithm 
(GMRES) with the Krylov subspace of the first degree.
(Нестационарный итерационный метод решения систем 
линейных алгебраических уравнений. Суть метода 
состоит в поиске на каждой итерации итерационного 
параметра проекционным методом. Данный метод является 
частным случаем обобщенного метода минимальных 
невязок с подпространством Крылова первой степени.)
}
\examples{
Reductor <- 10
AN <- diag(seq(0.1, 0.9, 0.8/Reductor))
fN <- rnorm(Reductor + 1)
uN <- rnorm(Reductor + 1)
result <- IMRES(AN, fN, uN, eps = 10e-5)
print(result)
all.equal(solve(AN) \%*\% fN, result) 

AC <- diag(seq(0.1, 0.9, 0.8/Reductor) + 1i * seq(0.1, 0.9, 0.8/Reductor))
fC <- rnorm(Reductor + 1) + 1i * rnorm(Reductor + 1)
uC <- rnorm(Reductor + 1) + 1i * rnorm(Reductor + 1)
result <- IMRES(AC, fC, uC, eps = 10e-5)
print(result)
all.equal(solve(AC) \%*\% fC, result) 

M <- matrix(rnorm((Reductor + 1) ^ 2), nrow = Reductor + 1, ncol = Reductor + 1)
print(IMRES(M, fC, uN, eps = 10e-6, iterations = 10000))
}
